plugins {
    alias(libs.plugins.androidApplication)
//    id 'com.android.library'

}

def versionMajor = 0
def versionMinor = 41
def versionPatch = 11

android {
    namespace 'com.kit.biometricsdk'
    compileSdk 34

    defaultConfig {
//        applicationId "com.kit.biometricsdk"
        applicationId "com.karooth.bio"
        minSdk 24
        targetSdk 34

        version genVersion(versionMajor, versionMinor, versionPatch)
        versionCode genVersionCode(versionMajor, versionMinor, versionPatch)
        versionName genVersionName(versionMajor, versionMinor, versionPatch)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'arm64-v8a'
        }

        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }

    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/nfiq/CMakeLists.txt"
        }
    }


    buildTypes {
        release {
            minifyEnabled true
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "app_version_name_bc", "Version: ${defaultConfig.versionName}"
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "app_version_name_bc", "Version: ${defaultConfig.versionName}"
        }
    }

//    applicationVariants.all { variant ->
//        variant.outputs.all {
//
//            outputFileName = "${"bio-sdk"}-${variant.versionName}-${variant.buildType.name}.aar"
//        }
//
//        buildConfigField "String", 'BASE_URL', '"https://api.xdb-solutions.com/"'
//        buildConfigField "String", 'BASE_URL_STAGE', '"https://api.xdb-solutions.com/"'
//
//    }

    buildFeatures{
        aidl true
        buildConfig true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation files('libs/FDxSDKProFDAndroid.jar','libs/MorphoSmart_SDK_6.42.0.0.jar')

    ////Photo Capture
    implementation ("com.github.yalantis:ucrop:2.2.8")

///Fingerprint Capture Starts
//    implementation("com.google.code.gson:gson:2.8.6")
//    implementation("com.fasterxml.jackson.core:jackson-databind:2.10.2")
//    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.10.2")
//
//    implementation ("com.machinezoo.sourceafis:sourceafis:3.18.1")
//
//    implementation("it.unimi.dsi:fastutil:7.2.1")
//    implementation("com.machinezoo.noexception:noexception:1.4.4")
//    implementation("commons-io:commons-io:2.6")
//    implementation("net.sourceforge.streamsupport:streamsupport:1.6.1")

    implementation("com.github.seamfix11:android-nfiq-calc:1.0.1")

//    implementation ("com.machinezoo.stagean:stagean:1.3.0")
//    implementation ("com.machinezoo.closeablescope:closeablescope:1.0.1")
//    implementation ("com.machinezoo.noexception:noexception:1.9.1")
//    implementation ("com.machinezoo.fingerprintio:fingerprintio:1.3.1")

    implementation ("it.unimi.dsi:fastutil:8.5.12")
    implementation ("commons-io:commons-io:2.15.0")
    implementation ("com.google.code.gson:gson:2.10.1")
    implementation ("com.fasterxml.jackson.core:jackson-databind:2.15.3")
    implementation ("com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.15.3")
    implementation ("com.github.mhshams:jnbis:2.1.2")

///Fingerprint Capture Ends

    implementation 'io.reactivex.rxjava3:rxjava:3.1.7' // Use the latest version
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'

    implementation("androidx.appcompat:appcompat:1.6.1")
    implementation("com.google.android.material:material:1.11.0")
    implementation("androidx.constraintlayout:constraintlayout:2.1.4")
    implementation project(':OpenCV')
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")


}

def static genVersionCode(Integer major, Integer minor, Integer patch) {
    return major * 10000 + minor * 100 + patch
}

def static genVersionName(Integer major, Integer minor, Integer patch) {
    return "${major}.${minor}.${patch}"
}

def static genVersion(Integer major, Integer minor, Integer patch) {
    return major * 10000 + minor * 100 + patch
}
